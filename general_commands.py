from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from config import dp, db, bot
from datetime import datetime


@dp.message_handler(commands="cancel", state="*")
@dp.message_handler(Text(equals="–æ—Ç–º–µ–Ω–∞", ignore_case=True), state="*")
async def cmd_cancel(message: types.Message, state: FSMContext):  # –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –æ –Ω—ë–º –¥–∞–Ω–Ω—ã–µ
    await state.finish()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=types.ReplyKeyboardRemove())


@dp.message_handler(commands=["start"], state="*")
async def cmd_start(message: types.Message, state: FSMContext):

    if db.admins_exists(message.from_user.id):
        #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑"))
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –í–∞—Å, –º–æ–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä " + str(message.from_user.full_name) + "\n"
                            "–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                            "1Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤(—Å –≤—ã–±–æ—Ä–æ–º –≤–æ–¥–∏—Ç–µ–ª—è)\n"
                            "2Ô∏è‚É£ –ü—Ä–æ—Å–º–æ—Ç—Ä/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —É –≤–æ–¥–∏—Ç–µ–ª–µ–π\n"
                             ,reply_markup=keyboard)

    elif db.drivers_exists(message.from_user.id):
        #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–¥–∏—Ç–µ–ª—å
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑"))
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–æ–¥–∏—Ç–µ–ª—è " + str(message.from_user.full_name) + "\n"
                             "–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                             "1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤(—Å –≤—ã–±–æ—Ä–æ–º –≤–æ–¥–∏—Ç–µ–ª—è)\n"
                             ,reply_markup=keyboard)

    elif db.clients_exists(message.from_user.id):
        #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–µ–Ω—Ç
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton(text="–î–∞ —Ö–æ—á—É!! –ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É"))
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –í–∞—Å," + str(message.from_user.full_name) + "\n"
                             "–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à–∏ –æ—Å–µ–Ω–µ–∑–∞—Ç–æ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏\n"
                             "–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –º–∞—à–∏–Ω—ã –Ω–∞ –æ—Ç–∫–∞—á–∫—É –≤–∞—à–µ–π —è–º—ã? \n"
                             ,reply_markup=keyboard)

    else:
        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –∑–∞—â–µ–ª
        db.add_client(message.from_user.id, message.from_user.full_name, datetime.utcnow())
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.KeyboardButton(text="–î–∞ —Ö–æ—á—É!! –ó–∞–∫–∞–∑–∞—Ç—å –º–∞—à–∏–Ω—É"))
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –í–∞—Å," + str(message.from_user.full_name) + "\n"
                             "–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n"
                             "–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –º–∞—à–∏–Ω—ã –Ω–∞ –æ—Ç–∫–∞—á–∫—É –≤–∞—à–µ–π —è–º—ã? \n"
                             ,reply_markup=keyboard)

@dp.message_handler(commands="set_commands", state="*")
async def cmd_set_commands(message: types.Message):
    if message.from_user.id == 877916659:  # –ü–æ–¥—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π Telegram ID
        commands = [types.BotCommand(command="/drinks", description="–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞–ø–∏—Ç–∫–∏"),
                    types.BotCommand(command="/food", description="–ó–∞–∫–∞–∑–∞—Ç—å –±–ª—é–¥–∞")]
        await bot.set_my_commands(commands)
        await message.answer("–ö–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
